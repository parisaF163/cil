CIL version 1.7.3
More information at http://cil.sourceforge.net/

Usage: cilly [options] [gcc_or_mscl arguments]

Options:
  --mode=xxx   What tool to emulate:
                GNUCC   - GNU gcc
                AR      - GNU ar
                MSVC    - MS VC cl compiler
                MSLINK  - MS VC link linker
                MSLIB   - MS VC lib linker
               This option must be the first one! If it is not found there
               then GNUCC mode is assumed.
  --help (or -help) Prints this help message.
  --verbose    Prints a lot of information about what is being done.
  --save-temps Keep temporary files in the current directory.
  --save-temps=xxx Keep temporary files in the given directory.
  
  --nomerge    Apply CIL separately to each source file as they are compiled.
               This is the default.
  --merge      Apply CIL to the merged program.
  --keepmerged  Save the merged file. Only useful if --nomerge is not given.
  --trueobj          Do not write preprocessed sources in .obj/.o files but
                     create some other files (e.g. foo.o_saved.c).
  --truelib          When linking to a library (with -r or -i), output real
                     object files instead of preprocessed sources. This only
		     works for GCC right now.
  --leavealone=xxx   Leave alone files whose base name is xxx. This means
                     they are not merged and not processed with CIL.
  --includedir=xxx   Adds a new include directory to replace existing ones
  --bytecode         Invoke the bytecode (as opposed to native code) system
  --stdoutpp         For MSVC only, use the "preprocess to stdout" mode. This 
                     is for some versions of MSVC that do not support 
                     well the /P file

Send bugs to necula@cs.berkeley.edu.

  All other arguments starting with -- are passed to the Cilly process.

The following are the arguments of the Cilly process
Usage: cilly [options] source-files
                                    
		General Options

  --version                         Output version information and exit
  --verbose                         Print lots of random stuff; this is passed on from cilly
  --noverbose                       Undo effect of verbose flag (default)
  --warnall                         Show optional warnings
  --nowarnall                       Disable optional warnings (default)
  --noTruncateWarning               Suppress warning about truncating integer constants
  --debug <xxx>                     Turn on debugging flag xxx
  --nodebug <xxx>                   Turn off debugging flag xxx
  --flush                           Flush the output streams often; aids debugging
  --noflush                         Only flush output streams when inevitable (default)
  --check                           Run a consistency check over the CIL after every operation
  --nocheck                         Turn off consistency checking of CIL (default)
  --strictcheck                     Same as --check, but treats problems as errors not warnings.
  --noPrintLn                       Do not output #line directives in the output
  --commPrintLn                     Print #line directives in the output, but put them in comments
  --commPrintLnSparse               Print commented #line directives in the output only when
				the line number changes.
  --stats                           Print statistics about running times and memory usage
  --nostats                         Do not print statistics (default)
  --log <filename>                  Set the name of the log file; by default use stderr
  --MSVC                            Enable MSVC compatibility; default is GNU
  --envmachine                      Use machine model specified in CIL_MACHINE environment variable
  --ignore-merge-conflicts          Ignore merging conflicts
  --sliceGlobal                     Output is the slice of #pragma cilnoremove(sym) symbols
  --tr <sys>                        Subsystem to show debug printfs for
  --extrafiles <filename>           File that contains a list of additional files to process,
				separated by newlines
                                    
		Lowering Options

  --lowerConstants                  Lower constant expressions (default)
  --noLowerConstants                Do not lower constant expressions
  --insertImplicitCasts             Insert implicit casts (default)
  --noInsertImplicitCasts           Do not insert implicit casts
  --forceRLArgEval                  Forces right to left evaluation of function arguments
  --noForceRLArgEval                Evaluate function arguments in unspecified order (default)
  --nocil <index>                   Do not compile to CIL the global with the given index
  --noDisallowDuplication           Duplicate small chunks of code if necessary (default)
  --disallowDuplication             Prevent small chunks of code from being duplicated
  --makeStaticGlobal                Convert local static variables into global variables (default)
  --noMakeStaticGlobal              Use initializers for local static variables
  --useLogicalOperators             Where possible (that is, if there are no side-effects),
				retain &&, || and ?: (instead of transforming them to If statements)
  --noUseLogicalOperators Transform &&, || and ?: to If statements (default)
  --useComputedGoto                 Retain GCC's computed goto
  --noUseComputedGoto               Transform computed goto to Switch statements (default)
  --useCaseRange                    Retain ranges of values in case labels
  --noUseCaseRange                  Transform case ranges to sequence of cases (default)
  --keepunused                      Do not remove the unused variables and types
  --nokeepunused                    Remove unused variables and types (default)
  --rmUnusedInlines                 Delete any unused inline functions; this is the default in MSVC mode
  --noRmUnusedInlines               Do not delete any unused inline functions (default)
                                    
		Output Options

  --printCilAsIs                    Do not try to simplify the CIL when printing.
  --noPrintCilAsIs                  Simplify the CIL when printing.  This produces prettier output
				by e.g. changing while(1) into more meaningful loops   (default)
  --noWrap                          Do not wrap long lines when printing
  --pdepth <n>                      Set max print depth (default: 10000000)
  --decil                           Don't print CIL specific-features like __blockattribute__
  --out                             the name of the output CIL file.
				The cilly script sets this for you.
  --mergedout                       specify the name of the merged file
  --cabsonly <fname>                CABS output file name
  --printComments                   print cabs tree structure in comments in cabs output
  --patchFile <fname>               name the file containing patching transformations
  --printPatched                    print patched CABS files after patching, to *.patched
  --printProtos                     print prototypes to safec.proto.h after parsing
  --printNotice                     include a comment saying printed by FrontC
                                    
		CIL Features
  --doLiveness                      Enable Spit out live variables at a label
  --live_label                      Output the variables live at this label
  --live_func                       Output the variables live at each statement in this function.
  --live_debug                      Print lots of debugging info
  --dosimpleMem                     Enable simplify all memory expressions
  --docanonicalize                  Enable fixing some C-isms so that the result is C++ compliant.
  --doDataSlicing                   Enable data slicing
  --docallgraph                     Enable generation of a static call graph
  --doepicenter                     Enable remove all functions except those within some number
				of hops (in the call graph) from a given function
  --epicenter-name <name>           do an epicenter slice starting from function <name>
  --epicenter-hops <n>              specify max # of hops for epicenter slice
  --dostackGuard                    Enable instrument function calls and returns to maintain a
				separate stack for return addresses
  --doheapify                       Enable move stack-allocated arrays to the heap
  --heapifyAll                      When using heapify, move all local vars whose address is taken,
				not just arrays.
  --dooneRet                        Enable make each function have at most one 'return'
  --dologcalls                      Enable generation of code to log function calls
  --logcallprintf                   the name of the printf function to use
  --logcalladdproto                 whether to add the prototype for the printf function
  --doptranal                       Enable alias analysis
  --ptr_may_aliases                 Print out results of may alias queries
  --ptr_unify                       Make the alias analysis unification-based
  --ptr_model_strings               Make the alias analysis model string constants
  --ptr_conservative                Treat undefineds conservatively in alias analysis
  --ptr_results                     print the results of the alias analysis
  --ptr_mono                        run alias analysis monomorphically
  --ptr_types                       print inferred points-to analysis types
  --domakeCFG                       Enable make the program look more like a CFG
  --dopartial                       Enable interprocedural partial evaluation and constant folding
  --partial_global_const            treat global constants as initialized
  --partial_no_global_const         treat global constants as unknown values
  --partial_root_function           where to start simplification
  --partial_use_easy_alias          to analyze pointers
  --partial_use_ptranal_alias       to analyze pointers (also see options of ptranal feature)
  --dosast                          Enable search AST for generating some data
  --dosfi                           Enable instrument memory operations
  --sfireads                        SFI for reads
  --sfiwrites                       SFI for writes
  --dosimplify                      Enable compiles CIL to 3-address code
  --no-split-structs                do not split structured variables
  --no-convert-direct-calls         do not convert direct function calls to function pointer calls if the address of the function was taken
  --no-convert-field-offsets        do not convert field offsets to offsets by integer.    Implies --no-split-structs.  To be used by static code verification tools.
  --dologvariables                  Enable generation of code to collect all variables name
  --dologwrites                     Enable generation of code to log memory writes
  -help                             Display this list of options
  --help                            Display this list of options
